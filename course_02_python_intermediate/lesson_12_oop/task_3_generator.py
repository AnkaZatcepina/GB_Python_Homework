"""
üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.
üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –≤
–¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç start –¥–æ stop —Å —à–∞–≥–æ–º step.
üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, —Å—á–∏—Ç–∞–µ–º step=1.
üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º start=1.
"""

class FactorialRange:
    def __init__(self, start: int, stop: int = 1, step: int = 1):
        self.start = start
        self.stop = stop
        self.step = step

    @staticmethod
    def calc_factorial(number:int):
        mul_num = 1
        for i in range(2, number + 1):
            mul_num *= i
        return mul_num

    def __iter__(self):
        return self    

    def __next__(self):
        if self.start < self.stop:
            result = self.calc_factorial(self.start)
            self.start += self.step
            return result
        raise StopIteration

if __name__ == '__main__':
    fact_range = FactorialRange(10,20)
    for item in fact_range:
        print(item)  
    next(fact_range)              

