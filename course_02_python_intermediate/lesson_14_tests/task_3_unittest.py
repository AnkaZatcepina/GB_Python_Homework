"""
–ù–∞–ø–∏—à–∏—Ç–µ –¥–ª—è –∑–∞–¥–∞—á–∏ 1 —Ç–µ—Å—Ç—ã unittest. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:
    üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–∏–º–≤–æ–ª–æ–≤
    üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –∑–Ω–∞–∫–æ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏
    üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –±—É–∫–≤ –¥—Ä—É–≥–∏—Ö –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤
    üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ (–∫—Ä–æ–º–µ –ø. 1)
"""
import unittest
from string import ascii_letters

def delete_non_char(text: str) -> str:
    return "".join(char for char in text if char in ascii_letters or char == ' ').lower()

class TestDeleteNonChar(unittest.TestCase):
    def test_not_changed(self):
        self.assertEqual(delete_non_char('hello python'), 'hello python')
    def test_lower(self):
        self.assertEqual(delete_non_char('Hello Python'), 'hello python')
    def test_non_asccii(self):
        self.assertEqual(delete_non_char('hello, python!'), 'hello python')
    def test_non_english(self):
        self.assertEqual(delete_non_char('hello –ø—Ä–∏–≤–µ—Ç python'), 'hello  python')
    def test_all(self):
        self.assertEqual(delete_non_char('"Hello–ü—Ä–∏–≤–µ—Ç1223;‚Ññ Python2"'), 'hello python')



if __name__ == '__main__':
    unittest.main(verbosity=True)
